<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <!-- 应用名称 -->
    <property name="APP_NAME" value="product-service"/>
    <!--日志文件的保存路径,首先查找系统属性-Dlog.dir,如果存在就使用其；否则，在当前目录下创建名为logs目录做日志存放的目录 -->
    <property name="LOG_HOME" value="${log.dir:-logs}/${APP_NAME}"/>
    <!-- 日志输出格式 -->
    <property name="ENCODER_PATTERN"
              value="%d{yyyy-MM-dd  HH:mm:ss.SSS} %-5level %logger{80} - %msg%n"/>
    <contextName>${APP_NAME}</contextName>

    <!-- 控制台日志：输出全部日志到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>${ENCODER_PATTERN}</Pattern>
        </encoder>
    </appender>

    <!-- 文件日志：输出全部日志到文件 -->
    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/output.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 错误日志：用于将错误日志输出到独立文件 -->
    <appender name="ERROR_FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${ENCODER_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>

    <!--&lt;!&ndash; 独立输出的同步日志 &ndash;&gt;-->
    <!--<appender name="SYNC_FILE"-->
    <!--class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
    <!--<fileNamePattern>${LOG_HOME}/sync.%d{yyyy-MM-dd}.log</fileNamePattern>-->
    <!--<maxHistory>7</maxHistory>-->
    <!--</rollingPolicy>-->
    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
    <!--<pattern>${ENCODER_PATTERN}</pattern>-->
    <!--</encoder>-->
    <!--</appender>-->


    <!--<logger name="com.cml.learning.batch.configuration.BatchConfiguration" level="DEBUG">-->
    <!--<appender-ref ref="FILE"/>-->
    <!--</logger>-->


    <!--&lt;!&ndash; log collect start &ndash;&gt;-->
    <!--<appender name="logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">-->
        <!--<param name="Encoding" value="UTF-8"/>-->
        <!--<remoteHost>10.202.161.200</remoteHost>-->
        <!--<port>5044</port>-->
        <!--&lt;!&ndash; encoder is required &ndash;&gt;-->
        <!--<encoder class="net.logstash.logback.encoder.LogstashEncoder"/>-->
    <!--</appender>-->

    <!--<appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">-->
        <!--<appender-ref ref="logstash"/>-->
    <!--</appender>-->
    <!--&lt;!&ndash; log collect end &ndash;&gt;-->

    <appender name="RabbitMq" class="org.springframework.amqp.rabbit.logback.AmqpAppender">
        <layout>
            <pattern>
                {
                "time": "%date{ISO8601}",
                "thread": "%thread",
                "level": "%level",
                "class": "%logger{36}",
                "message": "%message"
                }

            </pattern>

        </layout>
        <host>10.202.161.200</host>
        <port>5672</port>
        <username>bluser</username>
        <password>bluser</password>
        <exchangeType>topic</exchangeType>
        <exchangeName>test.log</exchangeName>
        <!--<exchangeType>direct</exchangeType>-->
        <!--<exchangeName>amq.direct</exchangeName>-->

        <applicationId>product-service</applicationId>
        <routingKeyPattern>logstash</routingKeyPattern>
        <generateId>true</generateId>
        <charset>UTF-8</charset>
        <durable>true</durable>
        <abbreviation>36</abbreviation>
        <deliveryMode>NON_PERSISTENT</deliveryMode>
        <declareExchange>true</declareExchange>

    </appender>


    <logger name="org.springframework.amqp.rabbit.logback" level="INFO" additivity="true">
        <appender-ref ref="RabbitMq"/>
    </logger>

    <!-- mybatis loggers -->
    <!--<logger name="com.ibatis" level="DEBUG" />-->
    <!--<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />-->
    <!--<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />-->
    <!--<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />-->

    <root>
        <level value="info"/>
        <!--<appender-ref ref="ASYNC" />-->
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="RabbitMq"/>
    </root>
</configuration>